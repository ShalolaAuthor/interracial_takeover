namespace = bno_seduction_outcome

bno_seduction_outcome.0001 = {
	type = character_event
	title = bno_seduction_outcome.0001.title
	desc = {
		desc = bno_seduction_outcome.0001.desc
		first_valid = {
			triggered_desc = {
				trigger = { scope:scheme.scheme_success_chance >= 60 }
				desc = bno_seduction_outcome.0001.positive.desc
			}
			desc = bno_seduction_outcome.0001.negative.desc
		}
	}
	theme = seduce_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	immediate = {
		scope:target = { liege = { save_scope_as = discoverer } }
	}

	option = {
		name = bno_seduction_outcome.0001.a
		custom_tooltip = bno_seduction_outcome.0001.a.tooltip
		trigger_event = bno_seduction_outcome.0002 #Do the rolls!

		stress_impact = {
			craven = minor_stress_impact_gain
		}
	}

	option = {
		name = bno_seduction_outcome.0001.b
		scope:scheme = {
			end_scheme = yes
		}
	}
}

bno_seduction_outcome.0002 = {
	type = character_event

	hidden = yes

	immediate = {
		#SUCCESS ROLL
		random = {
			chance = scope:scheme.scheme_success_chance

			save_scope_value_as = {
				name = scheme_successful
				value = yes
			}
		}

		#DISCOVERY ROLL
		save_scope_value_as = {
			name = discovery_chance
			value = {
				value = 100
				subtract = scope:scheme.scheme_secrecy
			}
		}

		random = {
			chance = scope:discovery_chance
			save_scope_value_as = {
				name = scheme_discovered
				value = yes
			}
		}

		#FOR AI TARGETS, SEND ON_ACTIONS
		if = {
			limit = { scope:target = { is_ai = yes } }
			if = {
				limit = {
					exists = scope:scheme_successful
				}
				trigger_event = {
					on_action = bno_seduce_success
				}
			}
			else = {
				trigger_event = {
					on_action = bno_seduce_failure
				}
			}
		}
		#FOR PLAYER CHARACTER, SEND CHOICE EVENT
		else = {
			scope:target = {
				trigger_event = {
					id = bno_seduction_outcome.0003
				}
			}
		}
	}
}

bno_seduction_outcome.0003 = {
	type = character_event
	title = bno_seduction_outcome.0003.title
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { exists = scope:scheme_successful }
				desc = bno_seduction_outcome.0003.success.desc
			}
			desc = bno_seduction_outcome.0003.failure.desc
		}
	}

	theme = seduce_scheme
	right_portrait = {
		character = scope:owner
		animation = flirtation
	}
	left_portrait = {
		character = scope:target 
		animation = personality_rational
	}

	option = {#Fuck Only
		name = bno_seduction_outcome.0003.a
		scope:owner = {
			bno_have_sex_with_effects = {
				PARTNER = scope:target
			}
		}
	}
	option = {#Make Lover
		name = bno_seduction_outcome.0003.b
		scope:owner = {
			bno_have_sex_with_effects = {
				PARTNER = scope:target
			}
			become_lover_with_target = {
				target = scope:target
				LOCATION = location
			}
		}
	}
	option = {#No Thanks
		name = bno_seduction_outcome.0003.c
		trigger = {
			NOT = { has_trait = bno_whitegirl }
		}
	}
	after = {
		scope:scheme = {
			end_scheme = yes
		}
	}
}