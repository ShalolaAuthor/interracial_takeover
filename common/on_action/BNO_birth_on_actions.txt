on_birth_child = {
	on_actions = {
		bno_blood_inheritance
		bno_legacy_birth
	}
}

bno_blood_inheritance = {
	trigger = {
		has_game_rule = bno_mod_status_on
	}
	effect = {
		#Flag Inheritance
		if = {
			limit = {
				AND = {
					scope:mother ?= { has_character_flag = bno_originally_african }
					scope:real_father ?= { has_character_flag = bno_originally_african }
				}
			}
			bno_seed_originally_african_flag = yes
		}
		#African Trait
		if = {
			limit = {
				exists = scope:mother
				exists = scope:real_father
				OR = {
					AND = {
						scope:mother = { has_trait = bno_full_black }
						scope:real_father = { has_trait = bno_full_black }
					}
					AND = {
						scope:mother = { has_trait = bno_full_black }
						scope:real_father = { has_trait = bno_mostly_black }
					}
					AND = {
						scope:mother = { has_trait = bno_mostly_black }
						scope:real_father = { has_trait = bno_full_black }
					}
				}
			}
			add_trait = bno_full_black
		}
		else_if = {
			limit = {
				exists = scope:mother
				exists = scope:real_father
				OR = {
					AND = {
						scope:mother = { has_trait = bno_mostly_black }
						scope:real_father = { has_trait = bno_mostly_black }
					}
					AND = {
						scope:mother = { has_trait = bno_mixed }
						scope:real_father = { has_trait = bno_full_black }
					}
					AND = {
						scope:mother = { has_trait = bno_full_black }
						scope:real_father = { has_trait = bno_mixed }
					}
					AND = {
						scope:mother = { has_trait = bno_mostly_black }
						scope:real_father = { has_trait = bno_mixed }
					}
					AND = {
						scope:mother = { has_trait = bno_mixed }
						scope:real_father = { has_trait = bno_mostly_black }
					}
				}
			}
			add_trait = bno_mostly_black
		}
		else_if = {
			limit = {
				exists = scope:mother
				exists = scope:real_father
				OR = {
					AND = {
						scope:mother = { has_trait = bno_mixed }
						scope:real_father = { has_trait = bno_mixed }
					}
					AND = {
						scope:mother = { has_trait = bno_full_black }
						scope:real_father = { has_trait = bno_barely_mixed }
					}
					AND = {
						scope:mother = { has_trait = bno_barely_mixed }
						scope:real_father = { has_trait = bno_full_black }
					}
					AND = {
						scope:mother = { has_trait = bno_mostly_black }
						scope:real_father = { has_trait = bno_barely_mixed }
					}
					AND = {
						scope:mother = { has_trait = bno_barely_mixed }
						scope:real_father = { has_trait = bno_mostly_black }
					}
					AND = {
						NOT = { scope:mother = { has_trait = bno_blood } }
						scope:real_father = { has_trait = bno_full_black }
					}
					AND = {
						scope:mother = { has_trait = bno_full_black }
						NOT = { scope:real_father = { has_trait = bno_blood } }
					}
				}
			}
			add_trait = bno_mixed
		}
		else_if = {
			limit = {
				exists = scope:mother
				exists = scope:real_father
				OR = {
					AND = {
						scope:mother = { has_trait = bno_barely_mixed }
						scope:real_father = { has_trait = bno_barely_mixed }
					}
					AND = {
						scope:mother = { has_trait = bno_mixed }
						scope:real_father = { has_trait = bno_barely_mixed }
					}
					AND = {
						scope:mother = { has_trait = bno_barely_mixed }
						scope:real_father = { has_trait = bno_mixed }
					}
					AND = {
						NOT = { scope:mother = { has_trait = bno_blood } }
						scope:real_father = { has_trait = bno_mostly_black }
					}
					AND = {
						scope:mother = { has_trait = bno_mostly_black }
						NOT = { scope:real_father = { has_trait = bno_blood } }
					}
					AND = {
						NOT = { scope:mother = { has_trait = bno_blood } }
						scope:real_father = { has_trait = bno_mixed }
					}
					AND = {
						scope:mother = { has_trait = bno_mixed }
						NOT = { scope:real_father = { has_trait = bno_blood } }
					}
				}
			}
			add_trait = bno_barely_mixed
		}
		else_if = {
			limit = {
				exists = scope:mother
				exists = scope:real_father
				scope:real_father = { has_trait = bno_bbc }
			}
			#remove_trait = bno_bbc
		}
	}
}

on_birth_mother = {
	on_actions = {
		black_bred_bitch
		white_breeder_on_birth_mother
	}
}

black_bred_bitch = {
	effect = {
		if = {
			limit = {
				scope:real_father = {		#triggers only if child's real father is BBC character
					has_trait = bno_bbc
				}
			}
			bno_increase_sluttyness = yes
		}
		if = {
			limit = {
				NOT = { is_spouse_of = scope:real_father }		#don't bother if BBC real father and mother are married
				scope:real_father = {							#triggers only if child's real father is BBC character
					is_alive = yes
					has_trait = bno_bbc
				}
			}
			scope:real_father = {				#send notification and prestige to BBC real father, assuming he is not married to the mother in question
				send_interface_message = {
					type = bno_blacked_events
					title = bno_birth_real_father_notification.title
					right_icon = scope:mother
					left_icon = scope:child
					desc = bno_birth_real_father_notification.desc
					add_prestige = 75
				}
			}
		}
		
		if = {
			limit = {
				AND = {
					scope:real_father = {			#triggers only if real father is BBC char and presumed father is non BBC char
						has_trait = bno_bbc
					}
					exists = scope:father
					scope:father = {
						NOT = { has_trait = bno_bbc }
					}
				}
			}
			scope:father = {
				send_interface_message = {			#send notification to presumed father, finds child's skin color a little off.
					type = bno_blacked_events
					title = bno_birth_cuck_father_notification.title
					right_icon = scope:mother
					left_icon = scope:child
					desc = bno_birth_cuck_father_notification.desc
				}
			}
		}
	}
}

white_breeder_on_birth_mother = {
	events = {
		bno_birth.0001 		#check if white breeder can be applied to mother
	}
}

on_birth_father = {
	on_actions = {
		bull_breeder
	}
}

bull_breeder = {
	events = {
		bno_birth.0002 #check if bull breeder modifier can be applied to father
	}
}

bno_legacy_birth = {
	effect = {
		hidden_effect = {
			if = {
				limit = {
					exists = scope:child.dynasty
					scope:child.dynasty = {
						has_dynasty_perk = bno_embrace_african_2
					}
					OR = {
						scope:mother.dynasty = scope:child.dynasty
						scope:real_father.dynasty = scope:child.dynasty
					}
				}
				if = {
					limit = {
						scope:child.dynasty = {
							exists = var:bno_embrace_african_2_bno_curious
						}
						is_female = yes
						NOT = {
							has_trait = bno_curious
						}
					}
					random = {
						chance = bno_embrace_african_2_chance
						modifier = {
							add = bno_embrace_african_2_extra_player_chance
							any_parent = {
								is_ai = no
							}
						}
						add_trait = bno_curious
					}
				}
				else_if = {
					limit = {
						scope:child.dynasty = {
							exists = var:bno_embrace_african_2_bno_bbc
						}
						NOT = {
							has_trait = bno_bbc
						}
					}
					random = {
						chance = bno_embrace_african_2_chance
						modifier = {
							add = bno_embrace_african_2_extra_player_chance
							any_parent = {
								is_ai = no
							}
						}
						add_trait = bno_full_black
						bno_add_bbc_trait_effect = yes
					}
				}
			}
		}
	}
}